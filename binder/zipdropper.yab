#!yab

################################
############# Prologue #############
################################

//ZipDropper v0.3
//By Michel Clasquin-Johnson
//A zip utility with an extremely minimalist interface
//Public Domain software 2009

 
//*************************
//*****Global Variables****
//*************************
 
## Technically, yab does not require you to declare global variables,
##It just is a really, really good idea to do it anyway.
// set DEBUG = 1 to print out all messages on the console
DEBUG = 0
//change this to DEBUG = 0 when you are ready to bind the program for distribution
 
tempfile$ = system$("finddir B_COMMON_TEMP_DIRECTORY") 
tempfile$ = left$(tempfile$, len(tempfile$) -1) //strip off trailing newline
tempfile$ = tempfile$ +"/ZipDropper.tmp" 
close #1
	
dim w$(5)
##########################
######Preliminary Commands#####
##########################

## Commands to run before the Main Loop come here.
## e.g. setting up a window with a menu.

//see if a settings file exist. If so, read positions
open #1,"/boot/home/config/settings/ZipDropper.settings", "a": close #1 //create the file if it does not exist
open "/boot/home/config/settings/ZipDropper.settings" for reading as #1
line input #1 across
line input #1 updown
close #1
if across = 0 or updown = 0 then //ie if the settings file was empty
	across = 100
	updown = 100
endif
acrossend = across + 150
updownend = updown + 70
 
 
 
OpenWindow()

 
 
 
#######End of Prologue#######


//Yabadabbadoo notification
########DO NOT RENAME THIS FILE!########
//Yabadabbadoo needs it to function.

//Main Message Loop
dim msg$(1)
while(not leavingLoop)
	nCommands = token(message$, msg$(), "|")
	for everyCommand = 1 to nCommands
		switch(msg$(everyCommand))
		case "_QuitRequested":
			case "MainWindow:_QuitRequested":
			case "Exitbutton"
				Ask2Leave()
				break
			case "Viewbutton"
				Preview("leftclick")
				break
			case "Zipbutton"
				Gozipem()
			default
				break
		end switch
		
			if(DEBUG and msg$(everyCommand)<>"") print msg$(everyCommand)
			if left$(msg$(everyCommand),18) ="DropHere:_Dropped:" Collectem()	
	
		next everyCommand

	mouse$ = MOUSE MESSAGE$ ("DropHere")
	if (DEBUG) print mouse$ 
	num = token(mouse$, w$(), ":")
	if (DEBUG) then
		for f = 1 to 5
			print w$(f)
		next f
	endif
	if w$(5)="1" Ask2Leave()
	mouse$ =""
wend

CloseWindow()

end

sub Ask2Leave()
	local getout
	getout= Alert "Do you want to Quit ZipDropper or\njust Clear the collection?","Quit", "Clear","Cancel","Warning"
	switch getout
		case 1
			across=Window Get "MainWindow", "Position-X"
			updown=Window Get "MainWindow", "Position-Y"
			open "/boot/home/config/settings/ZipDropper.settings" for writing as #1
			print #1 across
			print #1 updown
			close #1
			CloseWindow()
			break
		case 2
			KillTemp()
			break
		default
			break
	end switch
end sub

sub CloseWindow()
	//Close down the main window
	KillTemp()
	window close "MainWindow"
	return
end sub

sub Collectem()
	open #1,tempfile$, "a"
	print #1 mid$(msg$(everyCommand),19)
	close #1
end sub

sub Gozipem()
	local dothis$, filename$, preview, getmeouttahere,whereismyfile$
	whereismyfile$=system$("if test -e " + tempfile$ + "; then echo yeah; else echo nope;fi")
	if left$(whereismyfile$,1)="n" then
		alert "No collection found. Please drop some files.", "OK", "none"
		return
	else
		preview = Alert "Preview files to zip up?","Yes","No", "","Warning"
		if preview = 1 getmeouttahere=Preview("middleclick")
		if getmeouttahere=1 return
		filename$= filepanel "Save-File", "Zipfile to freshen/create?", "/boot/home/Desktop", "newzip.zip"
		if filename$="" return //User pressed cancel
		if lower$(right$(filename$,4))<>".zip" filename$ = filename$ + ".zip"
		filename$= "\'" + filename$ + "\'"
		dothis$ = "cat " + tempfile$ + " | zip -q9r@ " + filename$
		system(dothis$)
		dothis$="The files have been copied into\n" + mid$(filename$,2,len(filename$)-2)
		Alert dothis$,"OK", "Info"
		KillTemp()
		Alert "Collection cleared.\nDrop new files to continue.", "OK", "none"
	endif
end sub

sub KillTemp()
	local dothis$
	dothis$ = "rm -f " + tempfile$
	system(dothis$)
end sub

sub MakeMenu()
	//Create menu in MainWindow
	menu "File", "Quit", "Q", "MainWindow"
	menu "Help", "About", "", "MainWindow"
end sub

sub OpenWindow()
window open across,updown to acrossend, updownend, "MainWindow", "ZipDropper"
	window set "MainWindow", "look", "modal"
	window set "MainWindow", "Flags", "Accept-First-Click"
	window set "MainWindow", "Flags", "Not-Resizable"
	Window set "MainWindow", "Workspace", "All"
	view 1,1 to acrossend,40, "DropHere", "MainWindow"
	redc=255: greenc=240: bluec=160
	for f = 0 to 39
		draw set "highcolor", redc, greenc, bluec, "DropHere"
		draw line 0, f to acrossend,f, "DropHere"
		greenc=greenc-1: bluec = bluec -4
	next f
	draw set "highcolor", 0,0,0, "DropHere"
	Draw Text 30,17, "Drop files to be", "DropHere"
	Draw Text 30,32, "zipped up here", "DropHere"
	Tooltip "DropHere", "Drop files here to zip a collection,\nor right-click to Quit this program."
	view Dropzone "DropHere"
	button 0,41 to 50, 70, "Viewbutton", "View", "MainWindow" 
	button 51,41 to 100, 70, "Zipbutton", "Zip", "MainWindow" 
	button 101,41 to 150, 70, "Exitbutton", "Exit", "MainWindow" 
end sub

sub Preview(fromwhere$)
	local getmeouttahere, counter, total, thestring$, aline$, whereismyfile$
		whereismyfile$=system$("if test -e " + tempfile$ + "; then echo yeah; else echo nope;fi")

	 if left$(whereismyfile$,1)="n" then
		alert "No collection found. Please drop some files.", "OK", "none"
	else
		total = val(system$("wc -l " + tempfile$))
		if total > 15 then
			counter = 15
		else
			counter = total
		endif
		thestring$ = "   FILES:\n========\n (showing first 15 entries only)\n"
		open tempfile$ for reading as #1
		for f = 1 to counter
			line input #1 aline$
			thestring$= thestring$ + aline$ + "\n"
		next f
		close #1
		if total > counter thestring$ = thestring$ + "and " + str$(total-counter) + " more.\n"
		thestring$ = thestring$ + "\nContinue?"
		if fromwhere$ = "leftclick" then
			getmeouttahere= Alert thestring$,"","Yes","", "none"
		else if fromwhere$ = "middleclick" 
			getmeouttahere= Alert thestring$,"No!","Yes","", "none"
		endif
	endif
	return getmeouttahere
end sub

########################################
###DATA statements, if any, come here###
########################################


